@using Client.Models
@using X.PagedList
@using X.PagedList.Mvc
@model IEnumerable<Client.Models.StockListItem>

@{
    ViewBag.Title = "Index";
    var page = (Model as StaticPagedList<StockListItem>).PageNumber;
    var size = (Model as StaticPagedList<StockListItem>).PageSize;
    var url = Url.Action("Refresh", new {page, size});
}

<h2>Stocks <small>Click the button to refresh or auto refresh every 10 seconds</small></h2>
<p>
    <button id="refresh-btn" class="btn btn-default"><i class="fa fa-refresh fa-fw"></i> <span>Refresh</span></button>
</p>
<div id="talbe-wraper">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a href="#" class="btn btn-default btn-xs">Buy</a>
                </td>
            </tr>
        }

    </table>

    @Html.PagedListPager(Model as StaticPagedList<StockListItem>, p => Url.Action("Index", new {page = p}))
</div>

@section scripts
{
    <script>
        $(function () {
            function getData() {
                $("#refresh-btn i").toggleClass("fa-spin");
                $("#refresh-btn span").text(" Refreshing ...");
                $("#talbe-wraper").load("@Html.Raw(url)",
                    function() {
                        $("#refresh-btn i").toggleClass("fa-spin");
                        $("#refresh-btn span").text(" Refresh");
                    });
            }
            setInterval(getData, 10000);
            $("#refresh-btn")
                .click(function() {
                    getData();
                });
        });
    </script>
}
